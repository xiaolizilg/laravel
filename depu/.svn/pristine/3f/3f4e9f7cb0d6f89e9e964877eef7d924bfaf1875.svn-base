<?php

namespace App\Http\Controllers\Api;

use App\Models\Hotal\Hotal;
use App\Models\Doctor\Doctor;
use App\Models\Banner\Banner;
use App\Models\Service\Service;
use App\Models\Tourism\Tourism;
use App\Models\Project\Project;
use App\Models\Country\Country;
use App\Models\Hospital\Hospital;
use App\Models\Taxi\Taxi;
use App\Models\ServiceMember\ServiceMember;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;

class HomeController extends Controller
{
    public function index(Banner $banners, Project $projects)
    {
        $service  = config('website.service_mobile', '17612888261');
        $banners  = $banners->where(['status' => 1])->limit(4)->get(['pc_image_id', 'mobile_image_id', 'url'])->map(function($banner){
            $banner->pc_image     = $banner->pc_image;
            $banner->mobile_image = $banner->mobile_image;
            return $banner;
        });

        $projects = $projects->where(['status' => 1])->get(['id', 'title', 'cover_id'])->map(function($project){
            $project->cover = $project->cover;
            return $project;
        });

        return api(
                compact('service', 'banners', 'projects')
            );
    }

    public function projectInfo(Project $project, Country $countries)
    {
        $project = [
            'id'    => $project->id,
            'title' => $project->title,
            'cover' => $project->cover,
            'info'  => $project->info,
        ];

        $countries = $countries->where(['status' => 1])->paginate(10, ['id', 'title', 'title_en', 'cover_id'])->map(function($country){
            $country->cover = $country->cover;
            return $country;
        });

        return api(
                compact('project', 'countries')
            );
    }

    public function hospitals(Country $country)
    {
        $hospitals = $country->hospitals()->where(['status' => 1])->paginate(10, ['id', 'cover_id', 'title', 'desc', 'comment_starts', 'comment_numbers'])->map(function($item){
            $item->cover = $item->cover;
            $item->starts = $item->starts;

            return $item;
        });

        return api(compact('hospitals'));
    }

    public function hospitalInfo(Hospital $hospital)
    {
        $doctors = $hospital->doctors()->where(['status' => 1])->paginate(10, ['id', 'avatar_id', 'country_id', 'real_name', 'desc', 'comment_starts', 'comment_numbers'])->map(function($item){
            $item->avatar = $item->avatar;
            $item->starts = $item->starts;
            $item->country_name = $item->country->title;
            unset($item->country);

            return $item;
        });

        $comments = $hospital->comments()->with('user', 'replies')->paginate(10, ['id', 'user_id', 'starts', 'image_ids', 'content'])->map(function($item){
            $item->images = $item->images;
            $item->user_avatar = $item->user->avatar;
            $item->user_name = $item->user->name;
            $item->reply_content = $item->replies->map->content;
            unset($item->user);
            unset($item->replies);

            return $item;
        });

        $hospital = [
            'id'                 => $hospital->id,
            'cover'              => $hospital->cover,
            'title'              => $hospital->title,
            'info'               => $hospital->info,
            'address_zh'         => $hospital->address_zh,
            'address_en'         => $hospital->address_en,
            'baidu_point'        => $hospital->baidu_point,
            'google_point'       => $hospital->google_point,
            'success_rate'       => $hospital->success_rate,
            'bed_numbers'        => $hospital->bed_numbers,
            'doctor_numbers'      => $hospital->doctors()->count(),
            'treatment_numbers'  => $hospital->treatment_numbers,
            'department_numbers' => $hospital->department_numbers,
            'starts'             => $hospital->starts,
            'images'             => $hospital->images,
        ];

        return api(
                compact('hospital', 'doctors', 'comments')
            );
    }

    public function doctorInfo(Doctor $doctor)
    {
        $comments = $doctor->comments()->with('user', 'replies')->paginate(10, ['id', 'user_id', 'starts', 'image_ids', 'content'])->map(function($item){

            $item->images = $item->images;
            $item->user_avatar = $item->user->avatar;
            $item->user_name = $item->user->name;
            $item->reply_content = $item->replies->map->content;
            unset($item->user);
            unset($item->replies);

            return $item;
        });

        $doctor = [
            'id'           => $doctor->id,
            'avatar'       => $doctor->avatar,
            'country_name' => $doctor->country->title,
            'real_name'    => $doctor->real_name,
            'desc'         => $doctor->desc,
            'info'         => $doctor->info,
            'success_rate' => $doctor->success_rate,
            'exp'          => $doctor->exp,
            'starts'       => $doctor->starts,
        ];

        return api(
                compact('doctor', 'comments')
            );
    }

    public function services(Service $services)
    {
        $services = $services->where(['status' => 1])->get(['id', 'icon_id', 'title',  'price', 'desc'])->map(function($item){
            $item->icon = $item->icon;

            return $item;
        });

        return api(
                compact('services')
            );
    }

    public function medicalTranslations(Hospital $hospital)
    {
        $service_members = $hospital->service_members()->where(['type' => 0, 'status' => 1])->paginate(10, ['id', 'avatar_id', 'country_id', 'real_name', 'sex', 'desc', 'comment_starts', 'comment_numbers'])->map(function($item){
            $item->avatar = $item->avatar;
            $item->country_name = $item->country->title;
            $item->sex_desc = $item->sex_desc;
            $item->starts = $item->starts;
            unset($item->country);

            return $item;
        });

        return api(
                compact('service_members')
            );
    }

    public function lifeTranslations(Hospital $hospital)
    {
        $service_members = $hospital->service_members()->where(['type' => 1, 'status' => 1])->paginate(10, ['id', 'avatar_id', 'country_id', 'real_name', 'sex', 'desc', 'comment_starts', 'comment_numbers'])->map(function($item){
            $item->avatar = $item->avatar;
            $item->country_name = $item->country->title;
            $item->sex_desc = $item->sex_desc;
            $item->starts = $item->starts;
            unset($item->country);

            return $item;
        });

        return api(
                compact('service_members')
            );
    }

    public function nannies(Hospital $hospital)
    {
        $service_members = $hospital->service_members()->where(['type' => 2, 'status' => 1])->paginate(10, ['id', 'avatar_id', 'country_id', 'real_name', 'sex', 'desc', 'comment_starts', 'comment_numbers'])->map(function($item){
            $item->avatar = $item->avatar;
            $item->country_name = $item->country->title;
            $item->sex_desc = $item->sex_desc;
            $item->starts = $item->starts;
            unset($item->country);

            return $item;
        });

        return api(
                compact('service_members')
            );
    }

    public function serviceMemberInfo(ServiceMember $member)
    {
        $comments = $member->comments()->with('user', 'replies')->paginate(10, ['id', 'user_id', 'starts', 'image_ids', 'content'])->map(function($item){
            $item->images = $item->images;
            $item->user_avatar = $item->user->avatar;
            $item->user_name = $item->user->name;
            $item->reply_content = $item->replies->map->content;
            unset($item->user);
            unset($item->replies);

            return $item;
        });

        $service_member = [
            'id' => $member->id,
            'avatar' => $member->avatar,
            'country_name' => $member->country->title,
            'real_name' => $member->real_name,
            'desc' => $member->desc,
            'info' => $member->info,
            'sex_desc' => $member->sex_desc,
            'service_content' => $member->service_content,
            'starts' => $member->starts,
        ];

        return api(
                compact('service_member', 'comments')
            );
    }

    public function hotals(Hospital $hospital)
    {
        $hotals = $hospital->hotals()->where(['status' => 1])->paginate(10, ['id', 'cover_id', 'title', 'address_zh', 'address_en', 'baidu_point', 'google_point', 'comment_starts', 'comment_numbers'])->map(function($item){
            $item->cover = $item->cover;
            $item->starts = $item->starts;

            return $item;
        });

        return api(
                compact('hotals')
            );
    }

    public function hotalInfo(Hotal $hotal)
    {
        $comments = $hotal->comments()->with('user', 'replies')->paginate(10, ['id', 'user_id', 'starts', 'image_ids', 'content'])->map(function($item){
            $item->images = $item->images;
            $item->user_avatar = $item->user->avatar;
            $item->user_name = $item->user->name;
            $item->reply_content = $item->replies->map->content;
            unset($item->user);
            unset($item->replies);

            return $item;
        });

        $hotal = [
            'id'           => $hotal->id,
            'cover'        => $hotal->cover,
            'title'        => $hotal->title,
            'info'         => $hotal->info,
            'address_zh'   => $hotal->address_zh,
            'address_en'   => $hotal->address_en,
            'baidu_point'  => $hotal->baidu_point,
            'google_point' => $hotal->google_point,
            'images'        => $hotal->images,
            'level'        => $hotal->level,
            'starts'       => $hotal->starts,
        ];

        return api(
                compact('hotal', 'comments')
            );
    }

    public function taxis(Hospital $hospital)
    {
        $taxis = $hospital->taxis()->where(['status' => 1])->paginate(10, ['id', 'cover_id', 'title', 'desc', 'members', 'comment_starts', 'comment_numbers'])->map(function($item){
            $item->cover = $item->cover;
            $item->starts = $item->starts;

            return $item;
        });

        return api(
                compact('taxis')
            );
    }

    public function taxiInfo(Taxi $taxi)
    {
        $comments = $taxi->comments()->with('user', 'replies')->paginate(10, ['id', 'user_id', 'starts', 'image_ids', 'content'])->map(function($item){
            $item->images = $item->images;
            $item->user_avatar = $item->user->avatar;
            $item->user_name = $item->user->name;
            $item->reply_content = $item->replies->map->content;
            unset($item->user);
            unset($item->replies);

            return $item;
        });

        $taxi = [
            'id' => $taxi->id,
            'cover' => $taxi->cover,
            'title' => $taxi->title,
            'info' => $taxi->info,
            'starts' => $taxi->starts
        ];

        return api(
                compact('taxi', 'comments')
            );
    }

    public function tourisms(Hospital $hospital)
    {
        $tourisms = $hospital->tourisms()->where(['status' => 1])->paginate(10, ['id', 'cover_id', 'title', 'desc', 'comment_starts', 'comment_numbers'])->map(function($item){
            $item->cover = $item->cover;
            $item->starts = $item->starts;

            return $item;
        });

        return api(
                compact('tourisms')
            );
    }

    public function tourismInfo(Tourism $tourism)
    {
        $comments = $tourism->comments()->with('user', 'replies')->paginate(10, ['id', 'user_id', 'starts', 'image_ids', 'content'])->map(function($item){
            $item->images = $item->images;
            $item->user_avatar = $item->user->avatar;
            $item->user_name = $item->user->name;
            $item->reply_content = $item->replies->map->content;
            unset($item->user);
            unset($item->replies);

            return $item;
        });

        $spots = $tourism->spots->map(function($item){
            return [
                'cover'  => $item->cover,
                'title'  => $item->title,
                'info'   => $item->info,
                'images' => $item->images,
            ];
        });

        $tourism = [
            'id' => $tourism->id,
            'cover_id' => $tourism->cover_id,
            'title' => $tourism->title,
            'info' => $tourism->info,
        ];

        return api(
                compact('tourism', 'spots', 'comments')
            );
    }
}
